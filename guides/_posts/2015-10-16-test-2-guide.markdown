---
layout: post
title: Test 2 Guide
---

# Test 2 Guide

This guide is preparation for Test 2. It is not an assignment. Solutions will be posted soon. The test will cover only loops and arrays. You will take the test on a computer, and submit on Blackboard.

**You may bring a 5x7 notecard with any notes you want (front & back), to use during the test.**

## Loops

Write a `for` loop that draws 100 ellipses (I don't care about the dimensions or locations of the ellipses).

<hr/>

What is the value of `sum` after this loop is finished?

{% highlight java %}
int sum = 0;
for(int q = -5; q < 10; q--)
{
  sum += q;
  q = q + 3;
}
{% endhighlight %}

<hr/>

Fill in the following blanks so that the loop sets an integer `k` to the values -10, -8, -6, ..., 6, 8, 10.

{% highlight java %}
for(______________; ______________; ______________)
{% endhighlight %}

<hr/>

Write a `for()` loop that computes the sum of the numbers 500, 495, 490, ..., 10, 5. Save the sum into a variable called `sum`. 

## Arrays

Suppose we have an array with 97 values. What is the first array "position" or "index"? What is the last index?

<hr/>

What is the first and last position of this array:

{% highlight java %}
int[] xyz = new int[100];
{% endhighlight %}

<hr/>

What code will tell you the number of elements in some array called `arr`?

<hr/>

Create an array that can hold 100 decimal values. Don’t put any values in it.

<hr/>

Create an array that can hold the names of the 50 states. Don’t put any values in it.

<hr/>

Create an array that can hold symbols from the keyboard. Don’t put any values in it.

<hr/>

Using a loop, add 1 to every integer in the array arr. Don’t create the array.

<hr/>

Using a loop, print in reverse all elements of the array arr, which holds integers. Don’t create the array.

<hr/>

Create an array of 100 floats and, using a loop, fill it with the number 7.7.

<hr/>

Create an array of 100 floats and, using two loops, fill the first 50 elements with the number 2.2, and the second 50 elements with the number 9.9.

<hr/>

Suppose we have:

{% highlight java %}
char q;
int w;
float[] fs;
String[] words;
boolean y;
{% endhighlight %}

What type are each of the following? When the answer is some kind of array, write "array" (not "collection" and not `[]`) as well as the type, e.g., "boolean array."

- What type is `y`?
- What type is `fs[1]`?
- What type is `words[w+1]`?
- What type is `fs`?
- What type is `words`?
- What type is `w`?

<hr/>

Suppose we have:

{% highlight java %}
int j;
String s;
float[] ww;
String[] t;
float r;
int[] z;
{% endhighlight %}

- What type is `s`?
- What type is `t`?
- What type is `r`?
- What type is `t[0]`?
- What type is `t[j]`?
- What type is `ww[3]`?
- What type is `ww`?
- What type is `ww[j]`?
- What type is `z`?
- What type is `ww[z[0]]`?
- What type is `ww[z[j]]`?

<hr/>

Suppose I want to create an array of 1000 `float` values. Write the necessary code to define such an array with the name `myvals` and set all the values in the array to `12.55`.

<hr/>

Write code that creates an array of 2000 integers, called `oddeven`, and sets the values in "even" array positions (0, 2, ...) to `1` and "odd" array positions (1, 3, ...) to `0`. For example, `oddeven[18]` is `1` and `oddeven[19]` is `0`. (Note that you can determine if a number is even by checking if its remainder, after dividing by 2, is equal to 0.)

<hr/>

Print all the words in a String array `words` as a list, with numbers in front. For example, if `words` contains only the words "cat", "hat", and "bat", in that order, then the output should be:

```
1. cat
2. hat
3. bat
```

<hr/>

Finish this code so that it finds the smallest value in the array called `xs`, and saves that value into the variable `smallest`.

{% highlight java %}
int[] xs = new int[200]; // ... the array is filled with random values;
                         // that code is intentionally not shown

int smallest = ________;

for(int i = 0; _________________; i++) {

    if(_________________)
    {
        _________________;
    }
}
{% endhighlight %}

<hr/>

Complete the following code so that the array `copy` is a copy of the array `original`, i.e., it is the same size and all elements have the same values in the same order.

{% highlight java %}
float[] original = new float[100];
// original is filled with values...

float[] copy = ______________________________;

for(int j = (______________.length – 1); _____________________; j--)
{
    __________________________________________;
}
{% endhighlight %}


