---
layout: post
title: Arrays
---

# Arrays

## Example: 2D array for Sudoku

{% highlight cpp %}
int[][] vals2d = new int[9][9];
boolean[][] prefilled = new boolean[9][9];
int activeCellX = 0;
int activeCellY = 0;

void setup()
{
  size(600, 600);
  for(int i = 0; i < vals2d.length; i++)
  {
    for(int j = 0; j < vals2d[i].length; j++)
    {
      vals2d[i][j] = 0;
      prefilled[i][j] = false;
    }
  }
  vals2d[3][2] = 5;
  prefilled[3][2] = true;
  fill(0);
  strokeWeight(5);
  stroke(0);
  textSize(22);
  textAlign(CENTER);
}

void draw()
{
  background(255);
  for(int i = 0; i < vals2d.length; i++)
  {
    for(int j = 0; j < vals2d[i].length; j++)
    {
      // width of each cell: width/vals2d.length
      if(i == activeCellX && j == activeCellY)
      {
        fill(125);
      }
      else if(prefilled[i][j])
      {
        fill(125, 125, 0);
      }
      else
      {
        fill(255);
      }
      rect(i*width/vals2d.length, j*height/vals2d[i].length, width/vals2d.length, height/vals2d[i].length);
      fill(0);
      text(vals2d[i][j], i*width/vals2d.length + width/(2*vals2d.length), j*height/vals2d[i].length + height/(2*vals2d[i].length));
    }  
  }
}


void mouseClicked()
{
  int cellX = mouseX / (width/vals2d.length);
  int cellY = mouseY / (height/vals2d[0].length);
  if(!prefilled[cellX][cellY])
  {
    activeCellX = cellX;
    activeCellY = cellY;
  }
}

void keyTyped()
{
  if(key == '1') {
    vals2d[activeCellX][activeCellY] = 1;
  }
  if(key == '2') {
    vals2d[activeCellX][activeCellY] = 2;
  }
  if(key == '3') {
    vals2d[activeCellX][activeCellY] = 3;
  }
  if(key == '4') {
    vals2d[activeCellX][activeCellY] = 4;
  }
  if(key == '5') {
    vals2d[activeCellX][activeCellY] = 5;
  }
  if(key == '6') {
    vals2d[activeCellX][activeCellY] = 6;
  }
  if(key == '7') {
    vals2d[activeCellX][activeCellY] = 7;
  }
  if(key == '8') {
    vals2d[activeCellX][activeCellY] = 8;
  }
  if(key == '9') {
    vals2d[activeCellX][activeCellY] = 9;
  }
}
{% endhighlight %}

